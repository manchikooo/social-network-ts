{"version":3,"sources":["components/Navbar/Dialogs/Dialogs.module.css","components/Navbar/Friends/Friends.module.css","components/Navbar/Profile/MyPosts/MyPosts.module.css","components/Navbar/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Footer/Footer.module.css","components/Navbar/Users/Users.module.css","components/Navbar/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Navbar/Friends/FriendsItem.tsx","components/Navbar/Friends/Friends.tsx","components/Navbar/Navbar.tsx","components/Navbar/News/News.tsx","components/Navbar/Music/Music.tsx","components/Footer/Footer.tsx","components/Navbar/Videos/Videos.tsx","components/Navbar/Settings/Settings.tsx","Redux/DialogsPageReducer.ts","components/Navbar/Dialogs/DialogItem/DialogsItem.tsx","components/Navbar/Dialogs/Message/Message.tsx","components/Navbar/Dialogs/DialogsContainer.tsx","components/Navbar/Dialogs/Dialogs.tsx","Redux/UsersReducer.ts","components/Navbar/Users/Users.tsx","images/spinner-loader.svg","components/common/preloader/Preloader.tsx","components/Navbar/Users/UsersAPIComponent.tsx","components/Navbar/Users/UsersContainer.tsx","components/Navbar/Profile/ProfileInfo/ProfileInfo.tsx","components/Navbar/Profile/MyPosts/Post/Post.tsx","components/Navbar/Profile/MyPosts/MyPosts.tsx","Redux/ProfilePageReducer.ts","components/Navbar/Profile/MyPosts/MyPostsContainer.tsx","components/Navbar/Profile/Profile.tsx","components/Navbar/Profile/ProfileContainer.tsx","App.tsx","Redux/SidebarReducer.ts","Redux/ReduxStore.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","classes","header","src","FriendsItem","props","friends","friendsItems","friendAva","name","Friends","friendsElements","map","f","friendsTitle","friendsBlock","Sidebar","nav","item","to","navData","isActive","active","News","Music","Footer","footer","Videos","Settings","initialState","dialogs","id","v1","messages","message","newMessageText","DialogsPageReducer","state","action","type","newMessage","currentMessageText","DialogItem","path","dialog","itemName","Message","DialogsContainer","connect","dialogsPage","DialogsPage","dispatch","changeNewMessageText","currentMessageTextValue","sendMessage","dialogsElements","d","messagesElements","m","dialogsItem","value","onChange","e","currentTarget","onClick","users","totalUsersCount","pageSize","currentPage","isFetching","usersReducer","u","userID","followed","Users","pagesCount","Math","ceil","pages","i","push","styles","paginatorForUsers","goToFirstUserPage","arrowsForUsersButton","p","style","cursor","selectedPage","unSelectedPage","onPageChanged","goToLastUserPage","wrapper","usersPage","userBlock","userAvatarAndButtonBlock","userAvatar","alt","maxHeight","photos","small","userButtonFollowBlock","followUnfollowUserAC","userInfoBlock","userNameAndStatusBlock","fullNameStyle","statusStyle","status","userLocationBlock","countryStyle","cityStyle","Preloader","preloader","UsersAPIComponent","pageNumber","setCurrentPage","isToggleLoader","axios","get","response","setUsers","data","items","this","setTotalUsersCount","totalCount","UsersPage","followUnfollowUser","React","Component","UsersContainer","ProfileInfo","descriptionBlock","ava","profile","large","Post","post","messageInPost","likes","comments","reposts","MyPosts","postsElements","profilePage","posts","postsBlock","myPostsTitle","makeNewPost","newPostText","changeNewPostText","addPost","postedPosts","ProfilePageReducer","newPost","currentText","MyPostContainer","ProfilePage","currentPostTextValue","Profile","ProfileContainer","setUserProfileAC","App","store","getState","element","rootReducer","combineReducers","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fafc8fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__g45gG\",\"dialogsItem\":\"Dialogs_dialogsItem__15st8\",\"active\":\"Dialogs_active__3Hd9G\",\"dialog\":\"Dialogs_dialog__1W-aP\",\"messages\":\"Dialogs_messages__2IIQA\",\"message\":\"Dialogs_message__2dlTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsTitle\":\"Friends_friendsTitle__3j_Ms\",\"friendsItems\":\"Friends_friendsItems__2yrt_\",\"friendsBlock\":\"Friends_friendsBlock__3VL2J\",\"friendAva\":\"Friends_friendAva__xu0JV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsTitle\":\"MyPosts_myPostsTitle__1HrNl\",\"makeNewPost\":\"MyPosts_makeNewPost__35CpY\",\"postsBlock\":\"MyPosts_postsBlock__1HpKJ\",\"postedPosts\":\"MyPosts_postedPosts__36Z3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__zgA3I\",\"ava\":\"ProfileInfo_ava__3Aho7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__1ujvQ\",\"userBlock\":\"Users_userBlock__3yhwZ\",\"userAvatarAndButtonBlock\":\"Users_userAvatarAndButtonBlock__3jwaF\",\"userButtonFollowBlock\":\"Users_userButtonFollowBlock__3wE99\",\"userInfoBlock\":\"Users_userInfoBlock__2bL28\",\"userNameAndStatusBlock\":\"Users_userNameAndStatusBlock__3vTaU\",\"userLocationBlock\":\"Users_userLocationBlock__sryHZ\",\"fullNameStyle\":\"Users_fullNameStyle__ltw8S\",\"statusStyle\":\"Users_statusStyle__3Uolr\",\"countryStyle\":\"Users_countryStyle__2lEGN\",\"selectedPage\":\"Users_selectedPage__1uhyY\",\"unSelectedPage\":\"Users_unSelectedPage__3sVBH\",\"arrowsForUsersButton\":\"Users_arrowsForUsersButton__1m9_m\",\"paginatorForUsers\":\"Users_paginatorForUsers__399P2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__a09BG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport classes from './Header.module.css'\n\nconst Header = () => {\n    return (\n        <header className={classes.header}>\n            <img\n                 src='https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/LINE_logo.svg/768px-LINE_logo.svg.png'/>\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\";\nimport classes from './Friends.module.css'\n\ntype PropsType = {\n    name: string\n}\n\nexport const FriendsItem = (props: PropsType) => {\n\n    return (\n        <div className={classes.friends}>\n            <div className={classes.friendsItems}>\n                <div className={classes.friendAva}>\n                    <img\n                        src='https://st2.depositphotos.com/3557671/11164/v/950/depositphotos_111644880-stock-illustration-man-avatar-icon-of-vector.jpg'/>\n                </div>\n                {props.name}\n            </div>\n        </div>\n    )\n}","import classes from './Friends.module.css'\nimport {FriendsItem} from \"./FriendsItem\";\nimport React from 'react';\nimport {FriendsItemType} from \"../../../Redux/SidebarReducer\";\n\ntype PropsType = {\n    friends: Array<FriendsItemType>\n}\n\nexport const Friends = (props: PropsType) => {\n    let friendsElements = props.friends.map(f => <FriendsItem name={f.name}/>)\n\n    return (\n        <div className={classes.friends}>\n            <div className={classes.friendsTitle}>Friends</div>\n            <div className={classes.friendsBlock}>\n                {friendsElements}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport classes from './Navbar.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {Friends} from \"./Friends/Friends\";\nimport {FriendsItemType} from \"../../Redux/SidebarReducer\";\n\ntype PropsType = {\n    friends: Array<FriendsItemType>\n}\n\nexport const Sidebar = (props: PropsType) => {\n    return (<nav className={classes.nav}>\n            <div className={classes.item}>\n                <NavLink to='/profile'\n                         className={(navData) => navData.isActive ? classes.active : ''}>Profile</NavLink></div>\n            <div className={classes.item}>\n                <NavLink to='/dialogs'\n                         className={(navData) => navData.isActive ? classes.active : ''}>Dialogs</NavLink></div>\n            <div className={classes.item}>\n                <NavLink to='/users'\n                         className={(navData) => navData.isActive ? classes.active : ''}>Users</NavLink></div>\n            <div className={classes.item}>\n                <NavLink to='/news'\n                         className={(navData) => navData.isActive ? classes.active : ''}>News</NavLink></div>\n            <div className={classes.item}>\n                <NavLink to='/music'\n                         className={(navData) => navData.isActive ? classes.active : ''}>Music</NavLink></div>\n            <div className={classes.item}>\n                <NavLink to='/videos'\n                         className={(navData) => navData.isActive ? classes.active : ''}>Videos</NavLink></div>\n            <div className={classes.item}>\n                <NavLink to='/settings'\n                         className={(navData) => navData.isActive ? classes.active : ''}>Settings</NavLink></div>\n            <Friends friends={props.friends}/>\n        </nav>\n    )\n}\n","type NewsType = {}\n\nexport const News = (props: NewsType) => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}","import React from \"react\";\ntype MusicType = {}\n\nexport const Music = (props: MusicType) => {\n    return (\n        <div>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. A amet consequuntur cum distinctio dolorem eaque,\n            harum magnam sapiente velit! Autem, dicta libero mollitia nisi qui tempore! Dolore esse minima quae quam\n            quidem. A, accusantium aliquid at autem beatae cupiditate debitis dolore eius eligendi error eveniet facere\n            fugit iste iure laboriosam maxime nemo nesciunt officiis omnis pariatur perspiciatis quaerat qui, quia\n            quidem ratione rem sint soluta, tenetur totam vitae. Accusamus, adipisci aliquid assumenda doloremque\n            doloribus et fuga, illo iste laboriosam minus, necessitatibus nesciunt non quod quos recusandae reiciendis\n            reprehenderit rerum tempore voluptas voluptates. Cupiditate dicta est excepturi incidunt ipsa mollitia\n            neque, voluptatibus! Alias commodi eveniet ipsa labore mollitia non officia velit? Atque dignissimos\n            molestiae reprehenderit! Assumenda atque corporis dicta distinctio dolorum ea eius exercitationem harum\n            ipsum, laboriosam magni necessitatibus nesciunt nobis nostrum numquam pariatur placeat porro provident\n            quaerat quam quasi quisquam rem repellat repellendus similique velit veniam voluptate. Amet, molestias,\n            suscipit. Aut debitis eveniet excepturi harum inventore nisi porro provident ratione reiciendis\n            voluptatibus? Assumenda blanditiis consequatur consequuntur cum ea eligendi excepturi ipsa, labore minima\n            mollitia odit pariatur provident quae quaerat quasi quisquam sunt suscipit totam? Quidem quisquam\n            reprehenderit velit. Adipisci cumque cupiditate doloremque enim facere nostrum repellat veritatis. Aliquid\n            amet atque autem corporis culpa deleniti, dolorem dolores ea enim et eveniet, explicabo facilis fuga\n            inventore iusto laboriosam quas reiciendis, saepe temporibus tenetur! A blanditiis commodi maxime nobis\n            numquam officia, possimus quam rem totam! Asperiores labore laborum molestiae numquam possimus provident\n            quae quam quos veritatis voluptatibus! Dolorem magnam nobis perferendis quo reiciendis? Ab, ad adipisci\n            asperiores cumque distinctio ducimus excepturi fuga laborum nihil rerum similique sit, tempore tenetur vel\n            voluptatum? Accusamus animi aspernatur culpa earum impedit inventore labore laborum mollitia obcaecati\n            placeat quaerat, quibusdam. Aliquid architecto consectetur cum enim fugit impedit laudantium molestias nisi\n            obcaecati pariatur perspiciatis provident reiciendis repellat repudiandae, temporibus tenetur voluptates!\n            Debitis distinctio doloribus eius illo, inventore ipsam ipsum iste, iusto labore modi natus, pariatur\n            praesentium provident quos rem sequi tenetur. Animi doloribus eaque excepturi facere iusto pariatur\n            praesentium totam vero, vitae. Ad animi architecto consectetur, debitis dolores ea eos et iure iusto\n            laboriosam laborum nobis odit ullam. Accusamus, adipisci amet aspernatur commodi dignissimos dolores eaque\n            earum eum illo illum ipsam ipsum itaque laboriosam laudantium magnam minima, modi molestias necessitatibus\n            neque nostrum odio optio pariatur placeat provident quasi quia quisquam rem sed sequi sint sit soluta\n            tenetur ullam vero voluptas voluptate voluptatum! Consequuntur corporis dolore fuga modi quod sequi?\n            Doloremque error facere harum obcaecati odit pariatur. Accusamus assumenda consectetur debitis distinctio\n            esse, impedit natus reprehenderit ut velit? Accusamus accusantium animi blanditiis consequuntur cupiditate\n            delectus distinctio, dolor esse eum exercitationem facilis fugiat magnam minus praesentium quae quaerat quis\n            soluta suscipit unde ut vero vitae voluptates voluptatibus. A ad adipisci amet atque autem consectetur\n            consequatur consequuntur dignissimos dolor dolores eius facere fugit id, impedit ipsam iusto labore, magnam\n            nam, nesciunt nulla obcaecati praesentium quae quas quis quo reiciendis reprehenderit sapiente sed sunt\n            suscipit tenetur vel velit voluptate! Ea ipsum minima officia quas tempore. Dolorum eaque fugiat obcaecati\n            officiis praesentium sint, vel! A accusamus, alias asperiores commodi corporis culpa cumque distinctio dolor\n            dolore eius enim esse eveniet fuga fugiat, iusto laboriosam molestias neque nostrum optio pariatur\n            perferendis provident quae quas quasi quia quod ratione recusandae repellat suscipit tempore. Accusamus\n            aliquam, distinctio dolore doloremque eaque eius excepturi hic in nam placeat quasi quibusdam reiciendis\n            sequi. Alias animi aut culpa cupiditate debitis distinctio dolor expedita fugiat fugit ipsa ipsum iste iure\n            magnam maxime nostrum nulla obcaecati, odio perspiciatis quas quo quos reiciendis repellat reprehenderit\n            soluta ut vel voluptatum! Assumenda atque delectus ex fugit, incidunt iste magnam, optio placeat saepe\n            suscipit veritatis voluptatum! Ad blanditiis culpa, molestias ratione recusandae repellat veritatis\n            voluptates! Accusamus aspernatur culpa, dicta excepturi laborum laudantium, libero, maiores modi neque\n            numquam porro possimus quibusdam voluptatum! Deserunt eius mollitia pariatur reiciendis temporibus.\n            Blanditiis delectus eveniet illo magni odit ratione, sunt. Animi consequatur deserunt, dicta dolorum ea\n            eligendi, enim et eveniet explicabo fugiat impedit iste libero magnam magni maiores maxime molestiae natus\n            nihil nostrum numquam omnis placeat quam quis, quisquam quos similique tempora veniam. A ab assumenda\n            consequuntur corporis distinctio dolorem dolores eos facere fuga ipsam ipsum iure molestias nam, nesciunt\n            omnis perferendis porro quibusdam quisquam sapiente voluptas! Animi architecto blanditiis exercitationem\n            nostrum pariatur placeat soluta veniam! Cupiditate dolore incidunt possimus quas saepe? Aperiam aspernatur,\n            aut consectetur, culpa debitis ipsum minus, modi necessitatibus odio officiis omnis placeat provident quo\n            recusandae voluptatum. Atque consequatur dolorum ipsum perspiciatis voluptatum. Ab accusantium aperiam\n            architecto, debitis delectus distinctio dolore eius facere harum incidunt inventore ipsum iure laborum\n            maxime minus mollitia natus nulla odio placeat, quae quasi, quos totam velit veniam voluptatum! Beatae\n            cumque eligendi enim eum iusto laborum numquam placeat. A autem cupiditate earum expedita incidunt\n            laudantium modi nam pariatur quo temporibus? Atque aut delectus deserunt ea ipsum modi nobis omnis pariatur\n            placeat porro quas, quibusdam quod, rerum sed sequi tenetur, totam! Accusantium distinctio fuga fugit\n            inventore necessitatibus quasi quia soluta veniam voluptatibus voluptatum? Ad facilis fugit, hic iure non\n            quae ratione tempora. Alias aliquam, asperiores consequuntur delectus dignissimos dolor dolorum eligendi eum\n            ex excepturi exercitationem fugiat illum itaque laboriosam modi molestias natus necessitatibus nemo nobis\n            non pariatur perferendis perspiciatis placeat quod, saepe tempore ut voluptas. Commodi enim, maiores\n            molestiae necessitatibus nemo tempore! Accusamus accusantium blanditiis cupiditate deserunt distinctio,\n            eaque earum ex excepturi facere fuga iure labore laborum libero natus neque odio quis ratione repudiandae\n            sapiente, sint sit tempore tenetur vel velit, vitae? Accusamus accusantium aperiam culpa, earum eligendi eos\n            et illum in modi, molestias nam non nulla perferendis quaerat recusandae reiciendis, reprehenderit sequi\n            tempora vitae voluptatibus. Adipisci amet assumenda dolor, dolorem illo iusto maxime modi mollitia nam,\n            natus nostrum quam, quisquam quod sequi velit. Animi aspernatur commodi cupiditate debitis exercitationem\n            magnam mollitia odit quos, velit veritatis! Explicabo ipsum maiores nostrum. Architecto earum expedita\n            itaque, natus officia porro voluptatem. Beatae molestiae pariatur placeat quam soluta? At corporis cum hic\n            illo itaque magnam quaerat voluptatibus. Ab delectus, earum eos excepturi fugiat ipsum iusto libero minima\n            molestias necessitatibus recusandae sed tempora vero? Architecto aut eaque error magni odio quas sed?\n        </div>\n    )\n}","import React from 'react';\nimport classes from './Footer.module.css'\nconst Footer = () => {\n    return (\n        <div className={classes.footer}>\n            Footer\n        </div>\n    );\n};\n\nexport default Footer;","type VideosType = {}\n\nexport const Videos = (props: VideosType) => {\n    return (\n        <div>\n            Videos\n        </div>\n    )\n}","type SettingsType = {}\n\nexport const Settings = (props: SettingsType) => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}","import {v1} from \"uuid\";\n\ntype DialogItemType = {\n    id: string\n    name: string\n}\ntype MessageType = {\n    id: string\n    message: string\n}\n\nexport type initialStateType = {\n    dialogs: Array<DialogItemType>\n    messages: Array<MessageType>\n    newMessageText: string\n}\n\nconst initialState: initialStateType = {\n    dialogs: [\n        {id: v1(), name: 'Vlad Izh'},\n        {id: v1(), name: 'Katya Tselya'},\n        {id: v1(), name: 'Alexey Navalny'},\n        {id: v1(), name: 'Adolf Hitler'},\n        {id: v1(), name: 'Donald Trump'},\n        {id: v1(), name: 'Hydra Shop'},\n    ],\n    messages: [\n        {id: v1(), message: 'Hello'},\n        {id: v1(), message: 'How are you?'},\n        {id: v1(), message: 'Пустити'},\n        {id: v1(), message: 'Выбрал свой путь - иди по нему до конца'},\n        {id: v1(), message: 'MAGA'},\n        {id: v1(), message: 'buy please'},\n    ],\n    newMessageText: 'hello'\n}\n\nconst DialogsPageReducer = (state = initialState, action: ActionTypes): initialStateType => {\n    switch (action.type) {\n        case 'SEND-MESSAGE':\n            const newMessage: MessageType = {id: v1(), message: state.newMessageText}\n            return {\n                ...state,\n                messages: [...state.messages, newMessage],\n                newMessageText: ''\n            }\n        case 'CHANGE-MESSAGE-TEXT':\n            return {\n                ...state,\n                newMessageText: action.currentMessageText\n            }\n        default:\n            return state\n    }\n};\n\ntype ActionTypes = sendMessageACType | changeMessageACType\n\ntype sendMessageACType = {\n    type: 'SEND-MESSAGE'\n}\n\nexport const sendMessageAC = (): sendMessageACType =>\n    ({type: 'SEND-MESSAGE'})\ntype changeMessageACType = {\n    type: 'CHANGE-MESSAGE-TEXT',\n    currentMessageText: string\n}\nexport const changeMessageTextAC = (currentText: string): changeMessageACType =>\n    ({\n        type: 'CHANGE-MESSAGE-TEXT',\n        currentMessageText: currentText\n    })\n\nexport default DialogsPageReducer","import React from \"react\";\nimport classes from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nexport type DialogItemType = {\n    id: string\n    name: string\n}\n\nexport const DialogItem = (props: DialogItemType) => {\n\n    let path = '/dialogs/' + props.id\n    return (\n        <div className={classes.dialog}>\n            <NavLink to={path}\n                     className={(navData) => navData.isActive ? classes.active : ''}>\n               <img src='https://cdn-icons-png.flaticon.com/512/1184/1184457.png'/>\n                <span className={classes.itemName}>{props.name}</span>\n            </NavLink>\n        </div>\n    )\n}\n","import classes from './../Dialogs.module.css'\nimport React from 'react'\n\nexport type MessageType = {\n    id: string\n    message: string\n}\n\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={classes.message}>\n            {props.message}\n        </div>\n    )\n}\n\n","import React from \"react\";\nimport {changeMessageTextAC, initialStateType, sendMessageAC} from \"../../../Redux/DialogsPageReducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../Redux/ReduxStore\";\nimport {Dispatch} from \"redux\";\n\ntype MapStatePropsType = {\n    dialogsPage: initialStateType\n}\ntype MapDispatchToPropsType = {\n    changeNewMessageText: (currentMessageTextValue: string) => void\n    sendMessage: () => void\n}\n\nexport type DialogsPropsType = MapStatePropsType & MapDispatchToPropsType\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        dialogsPage: state.DialogsPage\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        changeNewMessageText: (currentMessageTextValue: string) => {\n            dispatch(changeMessageTextAC(currentMessageTextValue))\n        },\n        sendMessage: () => {\n            dispatch(sendMessageAC())\n        }\n    }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\n// export const DialogsContainer = () => {\n//\n//     return (\n//         <StoreContext.Consumer>{\n//             (store) => {\n//                 let state = store.getState().DialogsPage\n//\n//                 const changeNewMessageText = (currentMessageTextValue: string) =>\n//                     store.dispatch(changeMessageTextAC(currentMessageTextValue))\n//\n//                 const sendMessage = () => store.dispatch(sendMessageAC(state.newMessageText))\n//\n//                 return <Dialogs dialogItems={state.dialogs}\n//                                 messages={state.messages}\n//                                 newMessageText={state.newMessageText}\n//                                 changeNewMessageText={changeNewMessageText}\n//                                 sendMessage={sendMessage}\n//                 />\n//             }\n//         }\n//         </StoreContext.Consumer>\n//     )\n// }","import React from \"react\";\nimport classes from './Dialogs.module.css'\nimport {DialogItem, DialogItemType} from \"./DialogItem/DialogsItem\";\nimport {Message, MessageType} from \"./Message/Message\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\n\nexport const Dialogs = (props: DialogsPropsType) => {\n\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id}/>)\n\n    const changeNewMessageText = (e: React.ChangeEvent<HTMLTextAreaElement>) =>\n        props.changeNewMessageText(e.currentTarget.value)\n    const sendMessage = () => props.sendMessage()\n\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItem}>\n                {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                {messagesElements}\n                <div>\n                    <textarea value={props.dialogsPage.newMessageText}\n                              onChange={changeNewMessageText}/>\n                </div>\n                <div>\n                    <button onClick={sendMessage}>Send message</button>\n                </div>\n            </div>\n        </div>\n    )\n}","import {v1} from \"uuid\";\n\nexport type UserType = {\n    id: string\n    name: string\n    uniqueUrlName: string\n    photos: {\n        small: string\n        large: string\n    }\n    status: string\n    location: {\n        city: string\n        country: string\n    }\n    followed: boolean\n}\n\nexport type InitialStateType = {\n    users: Array<UserType>\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    isFetching: boolean\n}\n\nlet initialState: InitialStateType = {\n    users: [\n        //     {\n        //         id: v1(),\n        //         followed: false,\n        //         fullName: 'Dmitry',\n        //         status: 'status 1',\n        //         location: {\n        //             city: 'Minsk',\n        //             country: 'Belarus'\n        //         }\n        //     },\n        //     {\n        //         id: v1(),\n        //         followed: false,\n        //         fullName: `Vlad`,\n        //         status: 'status 2',\n        //         location: {\n        //             city: 'Kirov',\n        //             country: 'Russia'\n        //         }\n        //     },\n        //     {\n        //         id: v1(),\n        //         followed: true,\n        //         fullName: `Katya`,\n        //         status: 'status 3',\n        //         location: {\n        //             city: 'Kirov',\n        //             country: 'Russia'\n        //         }\n        //     },\n        //     {\n        //         id: v1(),\n        //         followed: true,\n        //         fullName: `Elena`,\n        //         status: 'status 4',\n        //         location: {\n        //             city: 'Moscow',\n        //             country: 'Russia'\n        //         }\n        //     },\n    ],\n    totalUsersCount: 0,\n    pageSize: 4,\n    currentPage: 1,\n    isFetching: true,\n}\n\nconst usersReducer = (state = initialState, action: ActionTypes): InitialStateType => {\n    switch (action.type) {\n        case 'FOLLOW-UNFOLLOW-USER':\n            return {\n                ...state,\n                users: [...state.users].map(u => u.id === action.userID ? {...u, followed: !u.followed} : u)\n            }\n        case 'SET-USERS': {\n            return {\n                ...state,\n                users: action.users\n            }\n        }\n        case 'SET-CURRENT-PAGE': {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case 'SET-TOTAL-USERS-COUNT': {\n            return {\n                ...state,\n                totalUsersCount: action.totalUsersCount\n            }\n        }\n        case 'IS-TOGGLE-LOADER': {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        default:\n            return state\n    }\n}\n\ntype ActionTypes =\n    followUnfollowUserACType\n    | setUsersACType\n    | setCurrentPageACType\n    | setTotalUsersCountACType\n    | isToggleLoaderACType\n\nexport type followUnfollowUserACType = ReturnType<typeof followUnfollowUser>\nexport const followUnfollowUser = (userID: string) => {\n    return {\n        type: 'FOLLOW-UNFOLLOW-USER',\n        userID\n    } as const\n}\n\nexport type setUsersACType = ReturnType<typeof setUsers>\nexport const setUsers = (users: Array<UserType>) => {\n    return {\n        type: 'SET-USERS',\n        users\n    } as const\n}\n\nexport type setCurrentPageACType = ReturnType<typeof setCurrentPage>\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: 'SET-CURRENT-PAGE',\n        currentPage\n    } as const\n}\nexport type setTotalUsersCountACType = ReturnType<typeof setTotalUsersCount>\nexport const setTotalUsersCount = (totalUsersCount: number) => {\n    return {\n        type: 'SET-TOTAL-USERS-COUNT',\n        totalUsersCount\n    } as const\n}\nexport type isToggleLoaderACType = ReturnType<typeof isToggleLoader>\nexport const isToggleLoader = (isFetching: boolean) => {\n    return {\n        type: 'IS-TOGGLE-LOADER',\n        isFetching\n    } as const\n}\n\n\nexport default usersReducer","import React from 'react';\nimport styles from \"./Users.module.css\";\nimport {InitialStateType} from \"../../../Redux/UsersReducer\";\nimport {NavLink} from \"react-router-dom\";\n\ntype PropsType = {\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    usersPage: InitialStateType\n    onPageChanged: (pageNumber: number) => void\n    goToFirstUserPage: () => void\n    goToLastUserPage: () => void\n    followUnfollowUserAC: (userID: string) => void\n    setUsers: (users: any) => void\n    setCurrentPage: (currentPage: number) => void\n    setTotalUsersCount: (totalUsersCount: number) => void\n}\n\n\nexport const Users = (props: PropsType) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages = []\n    if (props.currentPage === 1) {\n        for (let i = props.currentPage; i < props.currentPage + 7; i++) {\n            pages.push(i)\n        }\n    } else if (props.currentPage === 2) {\n        for (let i = props.currentPage - 1; i < props.currentPage + 6; i++) {\n            pages.push(i)\n        }\n    } else if (props.currentPage === 3) {\n        for (let i = props.currentPage - 2; i < props.currentPage + 5; i++) {\n            pages.push(i)\n        }\n    } else if (props.currentPage === pagesCount) {\n        for (let i = props.currentPage - 6; i < props.currentPage + 1; i++) {\n            pages.push(i)\n        }\n    } else if (props.currentPage === pagesCount - 1) {\n        for (let i = props.currentPage - 5; i < props.currentPage + 2; i++) {\n            pages.push(i)\n        }\n    } else if (props.currentPage === pagesCount - 2) {\n        for (let i = props.currentPage - 4; i < props.currentPage + 3; i++) {\n            pages.push(i)\n        }\n    } else if (props.currentPage === pagesCount - 3) {\n        for (let i = props.currentPage - 3; i < props.currentPage + 4; i++) {\n            pages.push(i)\n        }\n    } else for (let i = props.currentPage - 3; i < props.currentPage + 4; i++) {\n        pages.push(i)\n    }\n\n\n    return (\n        <>\n            <div className={styles.paginatorForUsers}>\n                    <span onClick={props.goToFirstUserPage}\n                          className={styles.arrowsForUsersButton}\n                    >\n                        ❮❮\n                    </span>\n\n                {pages.map(p => {\n                    return <span\n                        style={{cursor: \"pointer\"}}\n                        className={props.currentPage === p ? styles.selectedPage : styles.unSelectedPage}\n                        onClick={() => props.onPageChanged(p)}\n                    >{p}</span>\n                })\n                }\n\n                <span onClick={props.goToLastUserPage}\n                      className={styles.arrowsForUsersButton}\n                >\n                        ❯❯\n                    </span>\n            </div>\n            <div className={styles.wrapper}>\n                {\n                    props.usersPage.users.map(u =>\n                        <div className={styles.userBlock} key={u.id}>\n                            <div className={styles.userAvatarAndButtonBlock}>\n                                <div className={styles.userAvatar}>\n                                    <NavLink to={'/profile/' + u.id}>\n                                        <img alt='userAva' style={{maxHeight: '80px'}}\n                                             src={u.photos.small !== null ? u.photos.small : 'https://cdn-icons-png.flaticon.com/512/147/147144.png'}/>\n                                    </NavLink>\n                                </div>\n                                <div className={styles.userButtonFollowBlock}>\n                                    {u.followed\n                                        ? <button onClick={() => {\n                                            props.followUnfollowUserAC(u.id)\n                                        }}>Unfollow</button>\n                                        : <button onClick={() => {\n                                            props.followUnfollowUserAC(u.id)\n                                        }}>Follow</button>}\n                                </div>\n                            </div>\n                            <div className={styles.userInfoBlock}>\n                                <div className={styles.userNameAndStatusBlock}>\n                                    <div className={styles.fullNameStyle}>{u.name}</div>\n                                    <div className={styles.statusStyle}>{u.status}</div>\n                                </div>\n                                <div className={styles.userLocationBlock}>\n                                    <div className={styles.countryStyle}>{'u.location.country'}</div>\n                                    <div className={styles.cityStyle}>{'u.location.city'}</div>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n            <div className={styles.paginatorForUsers}>\n                    <span onClick={props.goToFirstUserPage}\n                          className={styles.arrowsForUsersButton}\n                    >\n                        ❮❮\n                    </span>\n\n                {pages.map(p => {\n                    return <span\n                        style={{cursor: \"pointer\"}}\n                        className={props.currentPage === p ? styles.selectedPage : styles.unSelectedPage}\n                        onClick={() => props.onPageChanged(p)}\n                    >{p}</span>\n                })\n                }\n\n                <span onClick={props.goToLastUserPage}\n                      className={styles.arrowsForUsersButton}\n                >\n                        ❯❯\n                    </span>\n            </div>\n        </>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/spinner-loader.1802fedd.svg\";","import React from 'react';\nimport preloader from \"../../../images/spinner-loader.svg\";\n\nexport const Preloader = () => {\n    return (\n        <div>\n            <img src={preloader} alt={'preloader'}/>\n        </div>\n    );\n};\n","import React from \"react\";\nimport axios from \"axios\";\nimport {UsersPropsType} from \"./UsersContainer\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\n\nexport class UsersAPIComponent extends React.Component<UsersPropsType, any> {\n\n    componentDidMount() {\n        this.props.isToggleLoader(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n            this.props.isToggleLoader(false)\n            this.props.setUsers(response.data.items)\n            this.props.setTotalUsersCount(response.data.totalCount)\n        })\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber)\n        this.props.isToggleLoader(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n            this.props.isToggleLoader(false)\n            this.props.setUsers(response.data.items)\n        })\n    }\n    goToFirstUserPage = () => {\n        this.props.isToggleLoader(true)\n        this.props.setCurrentPage(1)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=1&count=${this.props.pageSize}`).then(response => {\n            this.props.isToggleLoader(false)\n            this.props.setUsers(response.data.items)\n        })\n    }\n    goToLastUserPage = () => {\n        this.props.isToggleLoader(true)\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize)\n        this.props.setCurrentPage(pagesCount)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pagesCount}&count=${this.props.pageSize}`).then(response => {\n            this.props.isToggleLoader(false)\n            this.props.setUsers(response.data.items)\n        })\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    this.props.isFetching\n                        ? <Preloader/>\n                        : <Users totalUsersCount={this.props.totalUsersCount}\n                                 pageSize={this.props.pageSize}\n                                 currentPage={this.props.currentPage}\n                                 usersPage={this.props.UsersPage}\n                                 onPageChanged={this.onPageChanged}\n                                 goToFirstUserPage={this.goToFirstUserPage}\n                                 goToLastUserPage={this.goToLastUserPage}\n                                 followUnfollowUserAC={this.props.followUnfollowUser}\n                                 setUsers={this.props.setUsers}\n                                 setCurrentPage={this.props.setCurrentPage}\n                                 setTotalUsersCount={this.props.setTotalUsersCount}\n                        />\n                }\n\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../Redux/ReduxStore\";\nimport {Dispatch} from \"redux\";\nimport {\n    followUnfollowUser,\n    InitialStateType, isToggleLoader,\n    setCurrentPage, setTotalUsersCount,\n    setUsers,\n    UserType\n} from \"../../../Redux/UsersReducer\";\nimport {UsersAPIComponent} from \"./UsersAPIComponent\";\n\ntype MapStateToPropsType = {\n    UsersPage: InitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n}\ntype MapDispatchToPropsType = {\n    followUnfollowUser: (userID: string) => void\n    setUsers: (users: Array<UserType>) => void\n    setCurrentPage: (currentPage: number) => void\n    setTotalUsersCount: (totalUsersCount: number) => void\n    isToggleLoader: (isFetching: boolean) => void\n}\n\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        UsersPage: state.UsersPage,\n        pageSize: state.UsersPage.pageSize,\n        totalUsersCount: state.UsersPage.totalUsersCount,\n        currentPage: state.UsersPage.currentPage,\n        isFetching: state.UsersPage.isFetching,\n    }\n}\n// let mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n//     return {\n//         followUnfollowUser: (userID: string) => {\n//             dispatch(followUnfollowUserAC(userID))\n//         },\n//         setUsers: (users: any) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (currentPage: number) => {\n//             dispatch(setCurrentPageAC(currentPage))\n//         },\n//         setTotalUsersCount: (totalUsersCount: number) => {\n//             dispatch(setTotalUsersCountAC(totalUsersCount))\n//         },\n//         isToggleLoader: (isFetching: boolean) => {\n//             dispatch(isToggleLoaderAC(isFetching))\n//         },\n//     }\n// }\n\nexport const UsersContainer = connect(mapStateToProps,\n    {followUnfollowUser, setUsers, setCurrentPage, setTotalUsersCount, isToggleLoader,})(UsersAPIComponent)\n","import React from \"react\";\nimport classes from './ProfileInfo.module.css'\nimport {UserProfileType} from \"../../../../Redux/ProfilePageReducer\";\nimport {ProfilePropsType} from \"../ProfileContainer\";\n\ntype ProfileInfoPropsType = {\n    profile: UserProfileType\n}\n\nexport const ProfileInfo = (props: ProfileInfoPropsType) => {\n\n    let defaultAvatar = 'https://icon-library.com/images/avatar-icon/avatar-icon-4.jpg'\n\n    return (\n        <div className={classes.descriptionBlock}>\n            <img alt='ava' className={classes.ava}\n                 src={props.profile.photos.large ? props.profile.photos.large : defaultAvatar}/>\n            <span>About me: etc</span>\n        </div>\n    )\n}","import React from \"react\";\nimport classes from './Post.module.css'\nimport {Link} from \"react-router-dom\";\n\nexport type PostType = {\n    id: string\n    messageInPost: string\n    likes: number\n    comments: number\n    reposts: number\n}\n\nconst Post = (props: PostType) => {\n    return (\n        <div className={classes.post}>\n            <img src='https://cdn-icons-png.flaticon.com/512/147/147144.png'/>\n            <span>\n                {props.messageInPost}\n            </span>\n            <div>\n                <span>💚 {props.likes}</span> <Link to='/videos'> 💬 {props.comments}</Link> <span>↪️ {props.reposts}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import React from \"react\";\nimport classes from './MyPosts.module.css'\nimport Post, {PostType} from \"./Post/Post\";\nimport {v1} from \"uuid\";\nimport {ProfilePagePropsType} from \"./MyPostsContainer\";\n\nconst MyPosts = (props: ProfilePagePropsType) => {\n\n    const clickAddPost = () => {\n        props.addPost()\n    }\n\n    const enterNewPostText = (e: React.ChangeEvent<HTMLTextAreaElement>) =>\n        props.changeNewPostText(e.currentTarget.value)\n\n    let postsElements = props.profilePage.posts.map(p => <Post messageInPost={p.messageInPost}\n                                                      likes={p.likes}\n                                                      comments={p.comments}\n                                                      reposts={p.reposts}\n                                                      id={v1()}/>)\n\n    return (\n        <div className={classes.postsBlock}>\n            <h3 className={classes.myPostsTitle}>\n                My posts\n            </h3>\n            <div className={classes.makeNewPost}>\n                <textarea value={props.profilePage.newPostText}\n                          onChange={enterNewPostText}/>\n                <div>\n                    <button onClick={clickAddPost}>Add post</button>\n                </div>\n            </div>\n            <div className={classes.postedPosts}>\n                <div className={classes.post}>\n                    {postsElements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts","import {PostType} from \"../components/Navbar/Profile/MyPosts/Post/Post\";\nimport {v1} from \"uuid\";\n\nexport type initialStateType = {\n    posts: Array<PostType>\n    newPostText: string\n    profile: UserProfileType\n}\n\nexport type UserProfileType = {\n    aboutMe: string,\n    fullName: string,\n    photos: {\n        large: string\n        small: string\n    },\n    userId: number\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    contacts: {\n        \"facebook\": string,\n        \"website\": string,\n        \"vk\": string,\n        \"twitter\": string,\n        \"instagram\": string,\n        \"youtube\": string,\n        \"github\": string,\n        \"mainLink\": string\n    }\n}\n\nlet initialState: initialStateType = {\n    posts: [\n        {\n            id: v1(),\n            messageInPost: 'Hi, how are you?',\n            likes: 98,\n            comments: 22,\n            reposts: 7,\n        },\n        {\n            id: v1(),\n            messageInPost: `It's my third post!`,\n            likes: 126,\n            comments: 67,\n            reposts: 24,\n        },\n        {\n            id: v1(),\n            messageInPost: `It's my second post!`,\n            likes: 126,\n            comments: 67,\n            reposts: 24,\n        },\n        {\n            id: v1(),\n            messageInPost: `It's my first post!`,\n            likes: 126,\n            comments: 67,\n            reposts: 24,\n        },],\n    newPostText: '',\n    profile: {\n        \"aboutMe\": \"я круто чувак 1001%\",\n        \"contacts\": {\n            \"facebook\": \"facebook.com\",\n            \"website\": '',\n            \"vk\": \"vk.com/dimych\",\n            \"twitter\": \"https://twitter.com/@sdf\",\n            \"instagram\": \"instagra.com/sds\",\n            \"youtube\": '',\n            \"github\": \"github.com\",\n            \"mainLink\": ''\n        },\n        \"lookingForAJob\": true,\n        \"lookingForAJobDescription\": \"не ищу, а дурачусь\",\n        \"fullName\": \"samurai dimych\",\n        \"userId\": 2,\n        \"photos\": {\n            \"small\": \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\n            \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\n        }\n    }\n}\n\nconst ProfilePageReducer = (state = initialState, action: ActionTypes): initialStateType => {\n    switch (action.type) {\n        case 'ADD-POST':\n            const newPost: PostType = {\n                id: v1(),\n                messageInPost: state.newPostText,\n                likes: 100,\n                comments: 100,\n                reposts: 100\n            }\n            return {\n                ...state,\n                posts: [newPost, ...state.posts],\n                newPostText: ''\n            }\n        case 'CHANGE-NEW-POST-TEXT':\n            return {\n                ...state,\n                newPostText: action.currentText\n            }\n        case 'SET-USER-PROFILE':\n            return {\n                ...state,\n                profile: action.profile\n            }\n        default:\n            return state\n    }\n}\n\ntype ActionTypes = addPostACType | changePostACType | setUserProfileACType\n\nexport type changePostACType = ReturnType<typeof changePostAC>\n\nexport function changePostAC(currentText: string) {\n    return {\n        type: 'CHANGE-NEW-POST-TEXT',\n        currentText: currentText\n    } as const\n}\n\nexport type addPostACType = ReturnType<typeof addPostAC>\n\nexport function addPostAC() {\n    return {\n        type: 'ADD-POST'\n    } as const\n}\n\n\ntype setUserProfileACType = ReturnType<typeof setUserProfileAC>\n\nexport function setUserProfileAC(profile: UserProfileType) {\n    return {\n        type: 'SET-USER-PROFILE',\n        profile\n    } as const\n}\n\n\nexport default ProfilePageReducer\n\n","import React from \"react\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../../Redux/ReduxStore\";\nimport {Dispatch} from \"redux\";\nimport {addPostAC, changePostAC} from \"../../../../Redux/ProfilePageReducer\";\nimport {initialStateType} from \"../../../../Redux/ProfilePageReducer\";\n\ntype mapStateToPropsType = {\n    profilePage: initialStateType\n}\ntype mapDispatchToPropsType = {\n    changeNewPostText: (currentPostTextValue: string) => void\n    addPost: () => void\n}\n\nexport type ProfilePagePropsType = mapStateToPropsType & mapDispatchToPropsType\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.ProfilePage\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        changeNewPostText: (currentPostTextValue: string) =>\n            dispatch(changePostAC(currentPostTextValue)),\n        addPost: () => {\n            dispatch(addPostAC())\n        }\n    }\n}\n\nexport const MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\n// const MyPostsContainer = () => {\n//\n//     return (\n//         <StoreContext.Consumer>{\n//             (store) => {\n//                 let state = store.getState().ProfilePage\n//\n//                 const addPost = () => {\n//                     store.dispatch(addPostAC(state.newPostText))\n//                 }\n//                 const changeNewPostText = (currentPostTextValue: string) =>\n//                     store.dispatch(changePostAC(currentPostTextValue))\n//\n//                 return <MyPosts changeNewPostText={changeNewPostText}\n//                                 addPost={addPost}\n//                                 newPostText={state.newPostText}\n//                                 allPosts={state.posts}\n//                 />\n//             }\n//         }\n//         </StoreContext.Consumer>\n//     )\n// }\n","import React from \"react\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostContainer} from \"./MyPosts/MyPostsContainer\";\nimport {UserProfileType} from \"../../../Redux/ProfilePageReducer\";\n\ntype ProfileType = {\n    profile: UserProfileType\n}\n\nexport const Profile = (props: ProfileType) => {\n\n    return (\n        <div>\n            <ProfileInfo profile={props.profile}/>\n            <MyPostContainer/>\n        </div>\n    )\n}\n\nexport default Profile","import React from \"react\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostContainer} from \"./MyPosts/MyPostsContainer\";\nimport Profile from \"./Profile\";\nimport {AppStateType} from \"../../../Redux/ReduxStore\";\nimport {setUserProfileAC, UserProfileType} from \"../../../Redux/ProfilePageReducer\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\n\ntype MapStateToPropsType = {\n    profile: UserProfileType\n}\ntype MapDispatchToPropsType = {\n    setUserProfileAC: (profile: UserProfileType) => void\n}\n\nexport type ProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\n\nclass ProfileContainer extends React.Component<ProfilePropsType, any> {\n\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/3`)\n            .then(response => {\n                this.props.setUserProfileAC(response.data)\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile profile={this.props.profile}/>\n            </div>\n        )\n    }\n}\n\nlet MapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        profile: state.ProfilePage.profile\n    }\n}\n\nexport default connect(MapStateToProps, {setUserProfileAC: setUserProfileAC})(ProfileContainer)\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport {Sidebar} from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Navbar/Profile/Profile\";\nimport {Route, Routes} from \"react-router-dom\";\nimport {News} from \"./components/Navbar/News/News\";\nimport {Music} from \"./components/Navbar/Music/Music\";\nimport Footer from \"./components/Footer/Footer\";\nimport {Videos} from \"./components/Navbar/Videos/Videos\";\nimport {Settings} from \"./components/Navbar/Settings/Settings\";\nimport {ReduxStoreType} from \"./Redux/ReduxStore\";\nimport {DialogsContainer} from \"./components/Navbar/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Navbar/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Navbar/Profile/ProfileContainer\";\n\ntype AppType = {\n    store: ReduxStoreType\n}\n\nfunction App(props: AppType) {\n\n    const state = props.store.getState()\n\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <Sidebar friends={state.Sidebar.friends}/>\n            <div className='app-wrapper-content'>\n                <Routes>\n                    <Route path='/profile/*'\n                           element={<ProfileContainer />}/>\n                    <Route path='/dialogs/*'\n                           element={<DialogsContainer/>}/>\n                    <Route path='/news' element={<News/>}/>\n                    <Route path='/music' element={<Music/>}/>\n                    <Route path='/videos' element={<Videos/>}/>\n                    <Route path='/settings' element={<Settings/>}/>\n                    <Route path='/users' element={<UsersContainer/>}/>\n                </Routes>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","import {v1} from \"uuid\";\n\nexport type FriendsItemType = {\n    id: string\n    name: string\n}\n\nexport type initialStateType = {\n    friends: Array<FriendsItemType>\n}\n\nconst initialState: initialStateType = {\n    friends: [\n        {id: v1(), name: 'Katya'},\n        {id: v1(), name: 'Vlad'},\n        {id: v1(), name: 'Maks'},\n    ]\n}\n\nexport const SidebarReducer = (state = initialState, action: any): initialStateType => {\n\n    return state\n};\n","import {combineReducers, createStore} from \"redux\";\nimport ProfilePageReducer from \"./ProfilePageReducer\";\nimport DialogsPageReducer from \"./DialogsPageReducer\";\nimport {SidebarReducer} from \"./SidebarReducer\";\nimport usersReducer from \"./UsersReducer\";\n\nlet rootReducer = combineReducers({\n    ProfilePage: ProfilePageReducer,\n    DialogsPage: DialogsPageReducer,\n    UsersPage: usersReducer,\n    Sidebar: SidebarReducer\n})\nexport type AppStateType = ReturnType<typeof rootReducer>\nexport type ReduxStoreType = typeof store\n\nlet store = createStore(rootReducer)\n\nexport default store","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/ReduxStore\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App store={store}/>\n        </Provider>\n    </BrowserRouter>\n    ,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}